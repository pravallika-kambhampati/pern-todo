{"ast":null,"code":"var _jsxFileName = \"/home/pravallika/Desktop/pern-todo/client/src/components/EditTodo.js\";\nimport React, { Fragment, useState } from \"react\";\n\nconst EditTodo = ({\n  todo\n}) => {\n  const [description, setDescription] = useState(todo.description);\n\n  const updateDescription = async () => {\n    try {\n      const body = {\n        description\n      };\n      const response = await fetch(`http://localhost:5000/todos/${todo.todo_id}`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(body)\n      });\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    class: \"btn btn-dark\",\n    \"data-toggle\": \"modal\",\n    \"data-target\": `#id${todo.todo_id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 4\n    }\n  }, \"Edit\"), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"modal\",\n    id: `id${todo.todo_id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"modal-dialog\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"modal-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"modal-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    class: \"modal-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 12\n    }\n  }, \"Edit Todo\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    class: \"close\",\n    \"data-dismiss\": \"modal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 12\n    }\n  }, \"\\xD7\")), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"modal-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    value: description,\n    onChange: e => setDescription(e.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 12\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"modal-footer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    class: \"btn btn-secondary\",\n    \"data-dismiss\": \"modal\",\n    onClick: e => updateDescription(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 10\n    }\n  }, \"Edit\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    class: \"btn btn-info\",\n    \"data-dismiss\": \"modal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 12\n    }\n  }, \"Close\"))))));\n};\n\nexport default EditTodo;","map":{"version":3,"sources":["/home/pravallika/Desktop/pern-todo/client/src/components/EditTodo.js"],"names":["React","Fragment","useState","EditTodo","todo","description","setDescription","updateDescription","body","response","fetch","todo_id","method","headers","JSON","stringify","err","console","error","message","e","value"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,QAAzB,QAAwC,OAAxC;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAY;AAGrB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCJ,QAAQ,CAACE,IAAI,CAACC,WAAN,CAA9C;;AAEL,QAAME,iBAAiB,GAAG,YAAU;AAEnC,QAAG;AACD,YAAMC,IAAI,GAAG;AAACH,QAAAA;AAAD,OAAb;AACA,YAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAE,+BAA8BN,IAAI,CAACO,OAAQ,EAA7C,EAA+C;AAC1EC,QAAAA,MAAM,EAAE,KADkE;AAE1EC,QAAAA,OAAO,EAAG;AAAC,0BAAe;AAAhB,SAFgE;AAG1EL,QAAAA,IAAI,EAAEM,IAAI,CAACC,SAAL,CAAeP,IAAf;AAHoE,OAA/C,CAA5B;AASD,KAXD,CAWE,OAAMQ,GAAN,EAAU;AACRC,MAAAA,OAAO,CAACC,KAAR,CAAcF,GAAG,CAACG,OAAlB;AACH;AAED,GAjBD;;AAqBA,sBAAO,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACP;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,KAAK,EAAC,cAA5B;AAA2C,mBAAY,OAAvD;AAA+D,mBAAc,MAAKf,IAAI,CAACO,OAAQ,EAA/F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADO,eAaP;AAAK,IAAA,KAAK,EAAC,OAAX;AAAmB,IAAA,EAAE,EAAG,KAAIP,IAAI,CAACO,OAAQ,EAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,KAAK,EAAC,cAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,KAAK,EAAC,eAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAGE;AAAK,IAAA,KAAK,EAAC,cAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,KAAK,EAAC,aAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,eAEE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,KAAK,EAAC,OAA5B;AAAoC,oBAAa,OAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,CAHF,eAQE;AAAK,IAAA,KAAK,EAAC,YAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,IAAI,EAAG,MAAd;AAAqB,IAAA,SAAS,EAAC,cAA/B;AAA8C,IAAA,KAAK,EAAEN,WAArD;AAAmE,IAAA,QAAQ,EAAEe,CAAC,IAAId,cAAc,CAACc,CAAC,CAACC,KAAH,CAAhG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CARF,eAaE;AAAK,IAAA,KAAK,EAAC,cAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AACA,IAAA,IAAI,EAAC,QADL;AAEA,IAAA,KAAK,EAAC,mBAFN;AAGA,oBAAa,OAHb;AAIA,IAAA,OAAO,EAAED,CAAC,IAAIb,iBAAiB,CAACa,CAAD,CAJ/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eASE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,KAAK,EAAC,cAA5B;AAA2C,oBAAa,OAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aATF,CAbF,CADF,CADF,CAbO,CAAP;AA6CF,CAvED;;AA0EA,eAAejB,QAAf","sourcesContent":["import React, {Fragment, useState} from \"react\";\n\nconst EditTodo = ({todo}) => {\n  \n    \n        const [description, setDescription] = useState(todo.description);\n    \n   const updateDescription = async() =>{\n\n    try{\n      const body = {description};\n      const response = await fetch(`http://localhost:5000/todos/${todo.todo_id}`,{\n       method: \"PUT\",\n       headers : {\"Content-Type\":\"application/json\"},\n       body: JSON.stringify(body)  \n     \n\n      })\n\n\n    } catch(err){\n        console.error(err.message);\n    }\n\n   }\n\n\n\n   return <Fragment>\n   <button type=\"button\" class=\"btn btn-dark\" data-toggle=\"modal\" data-target={`#id${todo.todo_id}`}>\n     Edit\n   </button>\n   \n{\n    /*\n      id = id10\n    */\n}\n\n\n\n   <div class=\"modal\" id={`id${todo.todo_id}`}>\n     <div class=\"modal-dialog\">\n       <div class=\"modal-content\">\n   \n        \n         <div class=\"modal-header\">\n           <h4 class=\"modal-title\">Edit Todo</h4>\n           <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\n         </div>\n   \n         <div class=\"modal-body\">\n           <input type = \"text\" className=\"form-control\" value={description}  onChange={e => setDescription(e.value)}/>\n         </div>\n   \n     \n         <div class=\"modal-footer\">\n         <button \n         type=\"button\" \n         class=\"btn btn-secondary\" \n         data-dismiss=\"modal\"\n         onClick={e => updateDescription(e)}>\n            Edit \n         </button>\n\n           <button type=\"button\" class=\"btn btn-info\" data-dismiss=\"modal\">Close</button>\n         </div>\n   \n       </div>\n     </div>\n   </div></Fragment>  \n\n\n}\n\n\nexport default EditTodo;"]},"metadata":{},"sourceType":"module"}